# python3

n=0
def max_pairwise_product_naive(numbers):
    assert len(numbers) >= 2
    assert all(0 <= x <= 2 * 10 ** 5 for x in numbers)

    product = 0

    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            product = max(product, numbers[i] * numbers[j])

    return product


def max_pairwise_product(arr):
    #assert len(numbers) >= 2
    #assert all(0 <= x <= 2 * 10 ** 5 for x in numbers)

    n==len(arr)
    arr = sorted(arr)
    return arr[n-1]*arr[n-2]



if __name__ == '__main__':
    n = int(input())
    arr = list(map(int, input().split()))
    #assert len(numbers) == n
    #print(max_pairwise_product_naive(numbers))
    print(max_pairwise_product(arr))


